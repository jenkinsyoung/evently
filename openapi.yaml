openapi: 3.0.4
info:
  title: Evently
  version: 1.0.12
tags:
  - name: events
    description: Events operations
  - name: users
    description: Users operations
  - name: reviews
    description: Reviews operations
  - name: categories
    description: Categories operations
paths:
  /events:
    post:
      tags:
        - events
      summary: Добавление мероприятия
      description: Добавление нового мероприятия
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        # default:
        #   description: Unexpected error
        #   content:
        #     application/json:
        #       schema:
        #         $ref: "#/components/schemas/Error"
    get:
      tags:
        - events
      summary: Получить все мероприятия
      description: Возвращает все мероприятия
      operationId: getAllEvents
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '400':
          description: Invalid ID
        '404':
          description: Events not found


  /events/{id}:
    get:
      tags:
        - events
      summary: Найти мероприятие по UUID
      description: Возвращает одно мероприятие
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: getEvent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid ID
        '404':
          description: Event not found

    post:
      tags:
        - events
      summary: Зарегистрироваться на мероприятие
      description: Пользователь регистрируется на мероприятие
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: registerUserForEvent
      responses:
        '200':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID
        '404':
          description: Event not found

    put:
      tags:
        - events
      summary: Обновление мероприятия
      description: Обновление мероприятия по ID
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: updateEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid ID
        '404':
          description: Event not found
        '422':
          description: Validation exception
        # default:
        #   description: Unexpected error
        #   content:
        #     application/json:
        #       schema:
        #         $ref: "#/components/schemas/Error"

    delete:
      tags:
        - events
      summary: Удалить мероприятие по UUID
      description: Удаляет одно мероприятие
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: deleteEvent
      responses:
        '200':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID
        '404':
          description: Event not found

  /events/{id}/participants:
    get:
      tags:
        - events
      summary: Получить всех участников мероприятия
      description: Возвращает всех участников
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: getParticipantsForEvent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID
        '404':
          description: Event not found

  /users/{userID}/events:
    get:
      tags:
        - users
      summary: Получить мероприятия пользователя
      description: Возвращает все мероприятия пользователя
      parameters:
        - name: userID
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
        - name: isCreator
          in: query
          required: true
          schema:
            type: boolean
      operationId: getEventsForUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '400':
          description: Invalid ID
        '404':
          description: Event not found

  /users:
    post:
      tags:
        - users
      summary: Добавление пользователя
      description: Регистрация пользователя
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Successfully created
          content: {}
        '400':
          description: Invalid input
        '422':
          description: Validation exception



  /users/{userID}:
    get:
      tags:
        - users
      summary: Получить пользователя
      description: Возвращает пользователя
      parameters:
        - name: userID
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: getUserByID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID
        '404':
          description: User not found

    put:
      tags:
        - users
      summary: Изменение пользователя
      description: Изменение пользователя
      parameters:
        - name: userID
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content: {}
        '400':
          description: Invalid input
        '422':
          description: Validation exception

    delete:
      tags:
        - users
      summary: Удалить пользователя по UUID
      description: Удаляет пользователя
      parameters:
        - name: userID
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: deleteUser
      responses:
        '200':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID
        '404':
          description: User not found




  /reviews/{eventID}:
    post:
      tags:
        - reviews
      summary: Добавление отзыва
      description: Добавление нового отзыва
      parameters:
        - name: eventID
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - reviews
      summary: Получить все отзывы к мероприятию
      description: Возвращает все отзывы к мероприятию
      parameters:
        - name: eventID
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: getAllReviewsForEvent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID
        '404':
          description: Event not found

  /categories:
    post:
      tags:
        - categories
      summary: Добавление категории
      description: Добавление новой категории
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        # default:
        #   description: Unexpected error
        #   content:
        #     application/json:
        #       schema:
        #         $ref: "#/components/schemas/Error"
    get:
      tags:
        - categories
      summary: Получить все категории
      description: Возвращает все категории
      operationId: getAllCategories
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Invalid ID
        '404':
          description: Events not found


  /categories/{id}:
    get:
      tags:
        - categories
      summary: Получить категорию по UUID
      description: Возвращает категорию по UUID
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: getCategoryByUUID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Invalid ID
        '404':
          description: Category not found

    put:
      tags:
        - categories
      summary: Обновление категории
      description: Обновление категории по ID
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: updateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid ID
        '404':
          description: Category not found
        '422':
          description: Validation exception
        # default:
        #   description: Unexpected error
        #   content:
        #     application/json:
        #       schema:
        #         $ref: "#/components/schemas/Error"

    delete:
      tags:
        - categories
      summary: Удалить категорию по UUID
      description: Удаляет одну категорию
      parameters:
        - name: id
          in: path
          required: true
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      operationId: deleteCategory
      responses:
        '200':
          description: Successful operation
          content: {}
        '400':
          description: Invalid ID
        '404':
          description: Category not found


components:
  schemas:
    Event:
      type: object
      properties:
        event_id:
          type: string
          format: uuid
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        event_title:
          type: string
          example: Карнавал
        description:
          type: string
          example: Очень крутое мероприятие
        start_date:
          description: Дата и время начала
          type: string
          example: 2025-04-10T16:45:00.000Z
        end_date:
          description: Дата и время окончания
          type: string
          example: 2025-04-10T16:45:00.000Z
          nullable: true

        creator:
          $ref: '#/components/schemas/User'
        location:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        participant_count:
          description: Количество участников
          type: integer
          example: 10
          nullable: true
        image_urls:
          type: array
          items:
            type: string
          example:
            - https://example.com/image1.jpg
            - https://example.com/image2.jpg
        created_at:
          description: Дата и время окончания
          type: string
          example: 2025-04-10T16:45:00.000Z
          nullable: true


    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        nickname:
          type: string
        phone:
          type: string

    Review:
      type: object
      properties:
        review_id:
          type: string
          format: uuid
        event:
          $ref: '#/components/schemas/Event'
        user:
          $ref: '#/components/schemas/User'
        description:
          type: string
          example: "Прекрасное меропориятие, мне оч понравилось"
        score:
          type: number
          format: float

    Category:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
        category_name:
          type: string
          example: "Спорт"



